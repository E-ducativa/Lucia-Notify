#!/bin/bash

#########################################
#                                       #
#           LUCIA INSTALLER             #
#                                       #
#########################################

RED='\e[31m'
GREEN='\e[32m'
YELLOW='\e[33m'
RESET='\e[0m'

LUCIA_INSTALL_DIR=$HOME/Lucia
LUCIA_BRANCH='v2.0.0'

main() {
    print_banner

    add_perl_repository
    install_general_dependencies
    install_perl_dependencies
    download_lucia
    export_lucia_bin
    create_config_with_example

    print_success 'Lucia has been installed successfully'
}

add_perl_repository() {
    print_process 'Adding Perl repository to APT...'

    sudo add-apt-repository universe
    if [ $? -ne 0 ]; then
        print_error 'An error occurred while adding the Perl repositories'
        exit 1
    fi

    print_success 'Added repositories'
}

install_general_dependencies() {
    print_process 'Installing general dependencies...'

    sudo apt install cpanminus libmysqlclient-dev libdbi-perl libdbd-mysql-perl git mpv -y
    if [ $? -ne 0 ]; then
        print_error 'Failed to install dependencies'
        exit 1
    fi

    print_success 'Installed dependencies'
}

install_perl_dependencies() {
    print_process 'Installing Perl dependencies...'

    sudo cpanm Net::DBus Dotenv File::Which LWP::Simple JSON JSON::MaybeXS DateTime
    if [ $? -ne 0 ]; then
        print_error 'Failed to install Perl dependencies'
        exit 1
    fi

    print_success 'Installed Perl dependencies'
}

download_lucia() {
    print_process 'Downloading Lucia Notify...'

    rm --recursive --force $LUCIA_INSTALL_DIR 2>/dev/null

    git clone --branch $LUCIA_BRANCH https://github.com/grepmam/Lucia-Notify.git $LUCIA_INSTALL_DIR
    if [ $? -ne 0 ]; then
        print_error 'Failed to download Lucia from GIT'
        exit 1
    fi

    print_success 'Lucia downloaded successfully'
}

export_lucia_bin() {
    print_process 'Exporting Lucia Script...'

    bashrc=$HOME/.bashrc
    line='export PATH=$PATH:$HOME/Lucia/bin'

    grep "$line" $bashrc &>/dev/null
    if [ $? -eq 0 ]; then
        echo "$(grep --invert-match "$line" $bashrc)" > $bashrc
    fi

    echo "$line" >> $bashrc

    print_success 'Lucia has been exported'
}

create_config_with_example() {
    print_process 'Create config .env with example...'
    cp $LUCIA_INSTALL_DIR/.env.example $LUCIA_INSTALL_DIR/.env
    print_success 'Config created'
}

# Utils Functions

print_banner() {

    cat <<'EOF'
  _           _        ___         _        _ _         
 | |  _  _ __(_)__ _  |_ _|_ _  __| |_ __ _| | |___ _ _ 
 | |_| || / _| / _` |  | || ' \(_-<  _/ _` | | / -_) '_|
 |____\_,_\__|_\__,_| |___|_||_/__/\__\__,_|_|_\___|_|

 Created by: grepmam
 version: 1.2.0

EOF

}

print_error() {
    echo -e "[${RED}x${RESET}] $1"
}

print_success() {
    echo -e "[${GREEN}+${RESET}] $1"
}

print_process() {
    echo -e "[${YELLOW}*${RESET}] $1"
}

main
