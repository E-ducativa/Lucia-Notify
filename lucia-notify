#!/usr/bin/perl
#
# Copyright (c) 2023 - Grepmam 
#
# This is a perl script that is used to send notifications 
# of different bug related events.


use strict;
use warnings;

use Getopt::Long;

use lib './lib';
use Lucia;
use Utils;


my %args = ();
my $status;

Getopt::Long::Configure 'pass_through', 'noauto_abbrev';

# The script processes the following command line arguments:
#
# bugs         : Allows you to specify a list of bugs separated by commas.
# bugid or b   : Allows you to specify a specific bug ID.
# user or u    : Allows you to specify a specific username.
# time         : Allows to specify the time interval for queries to the database.
# testing or t : Indicates that test notifications should be sent.
# debug or d   : Indicates whether to display debugging messages.
# sound or s   : Allows you to activate a notification sound.
# voice or v   : Allows you to activate Lucia's voice.
# lang or l    : Allows to change Lucia's language.
# no-banner    : Indicates that the banner should not be displayed when starting the script.
# no-greeting  : Indicates that the greeting message should not be displayed.
# version      : Shows the version of the script.
# help or h    : displays help on the available arguments.

GetOptions
    \%args,
    'bugs:s',
    'bugid|b:i',
    'user|u:s',
    'time:i',
    'testing|t',
    'debug|d',
    'sound|s',
    'voice|v',
    'lang|l:s',
    'no-banner',
    'no-greeting',
    'version',
    'help|h'
;


if ( not $args{'no-banner'} ) {
    Utils::display_banner;
}


if ( $args{testing} ) {

    my $lucia = Lucia->new(
        sound => $args{sound},
        voice => $args{voice},
        lang  => $args{lang},
        debug => $args{debug}
    );

    $lucia->notify_for_testing;

    exit;
}


if ( $args{version} ) {
    Utils::display_version;
    exit;
}


if ( $args{help} ) {
    Utils::display_options;
    exit;
}


if ( defined $args{bugs} ) {

    if ( not $args{bugs} ) {
        print 'Argument syntax error: --bugs <bugs>';
        exit 1;
    }

    my $lucia = Lucia->new(
        time       => $args{time},
        sound      => $args{sound},
        voice      => $args{voice},
        lang       => $args{lang},
        debug      => $args{debug},
        nogreeting => $args{'no-greeting'}
    );

    $status = $lucia->notify_for_bugs( $args{bugs} );

    $status = $status == 1 ? 0 : 1;
    exit $status;
}


if ( defined $args{user} ) {

    if ( not $args{user} ) {
        print 'Argument syntax error: --user <nlastname>';
        exit 1;
    }

    my $lucia = Lucia->new(
        time       => $args{time},
        sound      => $args{sound},
        voice      => $args{voice},
        lang       => $args{lang},
        debug      => $args{debug},
        nogreeting => $args{'no-greeting'}
    );

    $status = $lucia->notify_for_user_bugs( $args{user} );

    $status = $status == 1 ? 0 : 1;
    exit $status;

}


if ( defined $args{bugid} ) {

    if ( not $args{bugid} ) {
        print 'Argument syntax error: --bugid <bug_id>';
        exit 1;
    }

    my $lucia = Lucia->new(
        time       => $args{time},
        sound      => $args{sound},
        voice      => $args{voice},
        lang       => $args{lang},
        debug      => $args{debug},
        nogreeting => $args{'no-greeting'}
    );

    $status = $lucia->notify_for_bug( $args{bugid} );

    $status = $status == 1 ? 0 : 1;
    exit $status;

}


print "USAGE: ./lucia-notify [OPTIONS]\n";
exit 1;
